//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Poc.Deploy.FrontEndApp.DataOperationServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HireEmployeeByEmployerCommand", Namespace="http://schemas.datacontract.org/2004/07/Poc.Deploy.CommonModels.Commands")]
    [System.SerializableAttribute()]
    public partial class HireEmployeeByEmployerCommand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeSalaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeName {
            get {
                return this.EmployeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNameField, value) != true)) {
                    this.EmployeeNameField = value;
                    this.RaisePropertyChanged("EmployeeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeSalary {
            get {
                return this.EmployeeSalaryField;
            }
            set {
                if ((this.EmployeeSalaryField.Equals(value) != true)) {
                    this.EmployeeSalaryField = value;
                    this.RaisePropertyChanged("EmployeeSalary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployerId {
            get {
                return this.EmployerIdField;
            }
            set {
                if ((this.EmployerIdField.Equals(value) != true)) {
                    this.EmployerIdField = value;
                    this.RaisePropertyChanged("EmployerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataOperationServices.IEmploymentCommandsHandleService")]
    public interface IEmploymentCommandsHandleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmploymentCommandsHandleService/Handle", ReplyAction="http://tempuri.org/IEmploymentCommandsHandleService/HandleResponse")]
        void Handle(Poc.Deploy.FrontEndApp.DataOperationServices.HireEmployeeByEmployerCommand command);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmploymentCommandsHandleService/Handle", ReplyAction="http://tempuri.org/IEmploymentCommandsHandleService/HandleResponse")]
        System.Threading.Tasks.Task HandleAsync(Poc.Deploy.FrontEndApp.DataOperationServices.HireEmployeeByEmployerCommand command);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmploymentCommandsHandleServiceChannel : Poc.Deploy.FrontEndApp.DataOperationServices.IEmploymentCommandsHandleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmploymentCommandsHandleServiceClient : System.ServiceModel.ClientBase<Poc.Deploy.FrontEndApp.DataOperationServices.IEmploymentCommandsHandleService>, Poc.Deploy.FrontEndApp.DataOperationServices.IEmploymentCommandsHandleService {
        
        public EmploymentCommandsHandleServiceClient() {
        }
        
        public EmploymentCommandsHandleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmploymentCommandsHandleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmploymentCommandsHandleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmploymentCommandsHandleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Handle(Poc.Deploy.FrontEndApp.DataOperationServices.HireEmployeeByEmployerCommand command) {
            base.Channel.Handle(command);
        }
        
        public System.Threading.Tasks.Task HandleAsync(Poc.Deploy.FrontEndApp.DataOperationServices.HireEmployeeByEmployerCommand command) {
            return base.Channel.HandleAsync(command);
        }
    }
}
